Index: src/mainpackage/mainPageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mainpackage;\n\n\nimport javafx.event.ActionEvent;\nimport javafx.fxml.FXML;\nimport javafx.fxml.Initializable;\nimport javafx.scene.chart.CategoryAxis;\nimport javafx.scene.chart.LineChart;\nimport javafx.scene.chart.NumberAxis;\nimport javafx.scene.chart.XYChart;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.ListView;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.layout.AnchorPane;\nimport javafx.scene.layout.Pane;\nimport javafx.scene.paint.Color;\nimport javafx.scene.shape.Line;\n\nimport java.beans.PropertyChangeEvent;\nimport java.beans.PropertyChangeListener;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.util.ArrayList;\nimport java.util.Random;\nimport java.util.ResourceBundle;\n\n\npublic class mainPageController  implements Initializable, PropertyChangeListener {\n    @FXML\n    private NumberAxis yAxis;\n\n    @FXML\n    private ImageView arrowImage;\n\n    @FXML\n    private CategoryAxis xAxis;\n\n    @FXML\n    private LineChart<String,Number> lineGraph;\n\n\n    @FXML\n    private ListView<Pane> friendBetsList;\n\n    @FXML\n    private Label totalBets;\n\n    @FXML\n    private Label totalGains;\n\n    @FXML\n    private AnchorPane mainPane;\n    @FXML\n    private ImageView coinImage;\n\n    @FXML\n    private Label coinBalLabel;\n    @FXML\n    private Button myBetsButton;\n    @FXML\n    private Button requestsButton;\n    @FXML\n    private Button newBetButton;\n\n    @FXML\n    private Label userNameLabel;\n\n    @FXML\n    void logoutPressed(ActionEvent event) throws IOException {\n        ScreenController.activate(\"loginFXML\");\n\n    }\n\n    @FXML\n    void profilePressed(ActionEvent event) throws IOException {\n        ScreenController.activate(\"userProfileFXML\");\n\n    }\n\n    @FXML\n    void friendsPressed(ActionEvent event) throws IOException {\n\n        ScreenController.activate(\"friendsListFXML\");\n\n    }\n    @FXML\n    void addCoinsPressed(ActionEvent event) {\n\n    }\n    @FXML\n    void myBetsPressed(ActionEvent event) {\n        ScreenController.activate(\"betsFXML\");\n\n    }\n    @FXML\n    void requestsPressed(ActionEvent event) throws IOException {\n        ScreenController.activate(\"betRequestsFXML\");\n\n    }\n\n    @FXML\n    void newBetPressed(ActionEvent event) throws IOException {\n            ScreenController.activate(\"newBetFXML\");\n    }\n\n\n    private XYChart.Series<String,Number> graphSeries;\n    public ArrayList<Bet> userBets = new ArrayList<>();\n    public daDatabase databaseObj = new daDatabase();\n    private Image arrowUp = new Image(getClass().getResourceAsStream(\"up.png\"));\n    private Image arrowDown = new Image(getClass().getResourceAsStream(\"down.png\"));\n\n    //public Pair<Boolean, Pair<Integer, ResultSet>> finshedBets = databaseObj.executeQuery(\"SELECT * FROM Bet WHERE betStatus = 3 AND betIsPaidOut AND betSenderUserID = 'your userid' OR betTargetUserID = 'your userid';\");\n    public int maxAccountValue = 0 ;\n    public int minAccountValue = 0;\n    public int overallGains = 0 ;\n\n    @Override\n    public void propertyChange(PropertyChangeEvent evt) {\n\n    }\n\n    @Override\n    public void initialize(URL location, ResourceBundle resources) {\n\n        lineGraph.setCreateSymbols(true);\n\n\n\n\n        //System.out.println(Integer.toString(finshedBets.getValue().getKey()));\n\n        for(int i= 0; i<10; i++){\n            userBets.add(ranBet());\n        }\n\n\n\n        setUpChart();\n        setUpData();\n        setUpListView();\n    }\n\n    public void setUpListView() {\n\n\n            for (Bet x : userBets) {\n                Pane pane = new Pane();\n                pane.setPrefSize(friendBetsList.getPrefWidth() * (0.85), (friendBetsList.getPrefHeight() / 4));\n                Label label = new Label(\"test\" + x.betAmount);\n                Line line = new Line();\n                line.setStartX(0);\n                line.setStartY(0);\n                line.setEndX(pane.getPrefWidth() * 1.15);\n                line.setEndY(0);\n                line.setStyle(\"-fx-stroke: lightgray\");\n\n\n                pane.getChildren().addAll(label, line);\n                friendBetsList.getItems().add(pane);\n            }\n        }\n\n    public void setUpData(){\n        totalBets.setText(Integer.toString(userBets.size()));\n        if(overallGains>=0){\n            arrowImage.setImage(arrowUp);\n            totalGains.setText(\"$\"+Integer.toString(overallGains));\n            totalGains.setTextFill(Color.GREEN);\n            totalBets.setTextFill(Color.GREEN);\n            requestsButton.setStyle(\"-fx-background-radius: 10px\");\n            myBetsButton.setStyle(\"-fx-background-radius: 10px\");\n            newBetButton.setStyle(\"-fx-background-radius: 10px\");\n            requestsButton.setStyle(\"-fx-background-color: #90EE90\");\n            myBetsButton.setStyle(\"-fx-background-color: #90EE90\");\n            newBetButton.setStyle(\"-fx-background-color: #90EE90\");\n        }\n        else{\n            arrowImage.setImage(arrowDown);\n            totalGains.setText(Integer.toString(overallGains));\n            totalGains.setTextFill(Color.RED);\n            totalBets.setTextFill(Color.RED);\n\n            requestsButton.setStyle(\"-fx-background-radius: 10px\");\n            myBetsButton.setStyle(\"-fx-background-radius: 10px\");\n            newBetButton.setStyle(\"-fx-background-radius: 10px\");\n            requestsButton.setStyle(\"-fx-background-color: #ee2645\");\n            myBetsButton.setStyle(\"-fx-background-color: #EE2645FF\");\n            newBetButton.setStyle(\"-fx-background-color: #EE2645FF\");\n\n        }\n\n    }\n\n    public void setUpChart()\n    {\n        yAxis = new NumberAxis();\n        xAxis = new CategoryAxis();\n        graphSeries = new XYChart.Series();\n        lineGraph.getData().add(graphSeries);\n        int i=1;\n\n\n        for(Bet x: userBets) {\n\n            overallGains += x.betAmount;\n            if (maxAccountValue < overallGains) {\n                maxAccountValue = overallGains;\n            }\n            if (minAccountValue > overallGains) {\n                minAccountValue = overallGains;\n\n            }\n            graphData(i);\n            i++;\n        }\n        yAxis.setLowerBound(minAccountValue-(minAccountValue *0.1));\n        yAxis.setUpperBound((maxAccountValue+(maxAccountValue *0.1)));\n\n    }\n\n    public void graphData(int i){\n        if(i==1){\n            XYChart.Data<String, Number> graphData = new XYChart.Data(\"0\",0);\n            graphSeries.getData().add(graphData);\n\n        }\n        XYChart.Data<String, Number> data = new XYChart.Data(Integer.toString(i),overallGains);\n        graphSeries.getData().add(data);\n        data.getNode().setOnMouseEntered(e -> {\n            Label dataLabel = new Label();\n            dataLabel.setText(\"$\"+data.getYValue());\n            dataLabel.setLayoutX(data.getNode().getLayoutX()+70);\n            dataLabel.setLayoutY(data.getNode().getLayoutY()+20);\n            mainPane.getChildren().add(dataLabel);\n            data.getNode().setOnMouseExited(ei -> {\n                mainPane.getChildren().remove(dataLabel);\n            });\n\n        });\n        if(overallGains < 0){\n            graphSeries.getNode().setStyle(\"-fx-stroke: red\");\n\n        }\n        else{\n            graphSeries.getNode().setStyle(\"-fx-stroke: lightgreen\");\n        }\n\n    }\n\n    public Bet ranBet(){\n        Random rand = new Random(); //instance of random class\n\n        //generate random values from 0-24\n        int ran = rand.nextInt()/10000000;\n        System.out.println(ran);\n\n        Bet randBet = new Bet(\"\",ran,\"\",\"\",false);\n        return randBet;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/mainpackage/mainPageController.java b/src/mainpackage/mainPageController.java
--- a/src/mainpackage/mainPageController.java	
+++ b/src/mainpackage/mainPageController.java	
@@ -255,7 +255,7 @@
 
         //generate random values from 0-24
         int ran = rand.nextInt()/10000000;
-        System.out.println(ran);
+        //System.out.println(ran);
 
         Bet randBet = new Bet("",ran,"","",false);
         return randBet;
